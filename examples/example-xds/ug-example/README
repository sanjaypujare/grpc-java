Enter the server pod

curl -L https://github.com/grpc/grpc-java/archive/v1.36.0.tar.gz | tar -xz
cd grpc-java-1.36.0/examples/example-xds
../gradlew --no-daemon installDist

build/install/example-xds/bin/xds-hello-world-server --xds-creds 50051 my-test-xds-server

Enter the client pod

curl -L https://github.com/grpc/grpc-java/archive/v1.36.0.tar.gz | tar -xz
cd grpc-java-1.36.0/examples/example-xds
../gradlew --no-daemon installDist

build/install/example-xds/bin/xds-hello-world-client --xds-creds my-xds-client xds:///example-grpc-server:8000

# to install jove
apt-get update &&\
  apt-get install -y jove &&\
  apt-get clean

------------------------------------------------------------------
Copy the bootstrap generator container from grpc-testing to meshca-gke-test
docker save -o ~/test/bsn.tar gcr.io/grpc-testing/td-grpc-bootstrap:66de7ea0e170351c9fae17232b81adbfb3e80ec3
docker load -i ~/test/bsn.tar
docker image list
(from the output above find the image id of gcr.io/grpc-testing/td-grpc-bootstrap:66de7ea0e170351c9fae17232b81adbfb3e80ec3
   as 2bdfc2ba31c6)
docker tag 2bdfc2ba31c6 gcr.io/meshca-gke-test/td-grpc-bootstrap:0.6
docker push gcr.io/meshca-gke-test/td-grpc-bootstrap:0.6
--------------------------------------------------
Another easier way:
docker pull gcr.io/grpc-testing/td-grpc-bootstrap:8af4336691ba23683ee3e280275894959dc47c4c
docker tag gcr.io/grpc-testing/td-grpc-bootstrap:8af4336691ba23683ee3e280275894959dc47c4c gcr.io/meshca-gke-test/td-grpc-bootstrap:0.11
docker push gcr.io/meshca-gke-test/td-grpc-bootstrap:0.11
--------------------------------------------------------------------
To enable logging using JAVA_OPTS
export JAVA_OPTS="-Djava.util.logging.config.file=/logging.properties"
----------------------------------------------------------------
jmap -dump:live,format=b,file=/java-heap.hprof <pid>

or

export JAVA_OPTS="-XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/java-heap-dump.hprof"

or

export JAVA_OPTS="-XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/java-heap-dump.hprof -Dio.grpc.netty.shaded.io.netty.leakDetection.level=paranoid"
