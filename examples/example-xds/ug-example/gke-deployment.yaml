apiVersion: v1
kind: Namespace
metadata:
  name: example-grpc-server
  labels:
    name: example-grpc-server
---
apiVersion: v1
kind: Namespace
metadata:
  name: example-grpc-client
  labels:
    name: example-grpc-client
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: example-grpc-server
  namespace: example-grpc-server
  annotations:
    iam.gke.io/gcp-service-account: ${PROJNUM}-compute@developer.gserviceaccount.com
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: example-grpc-client
  namespace: example-grpc-client
  annotations:
    iam.gke.io/gcp-service-account: ${PROJNUM}-compute@developer.gserviceaccount.com
---
apiVersion: v1
kind: Service
metadata:
  name: example-grpc-server
  namespace: example-grpc-server
  labels:
    k8s-app: example-grpc-server
  annotations:
    cloud.google.com/neg: '{"exposed_ports":{"8080":{"name": "example-grpc-server"}}}'
spec:
  ports:
  - name: helloworld
    port: 8080
    protocol: TCP
    targetPort: 50051
  selector:
    k8s-app: example-grpc-server
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: example-grpc-server
  namespace: example-grpc-server
  labels:
    k8s-app: example-grpc-server
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: example-grpc-server
  strategy: {}
  template:
    metadata:
      annotations:
        security.cloud.google.com/use-workload-certificates: ""
      labels:
        k8s-app: example-grpc-server
    spec:
      containers:
      - image: gcr.io/meshca-gke-test/psms-grpc-xds:2.06
        imagePullPolicy: Always
        name: example-grpc-server
        command:
        - /bin/sleep
        - inf
        env:
        - name: GRPC_XDS_BOOTSTRAP
          value: "/tmp/grpc-xds/td-grpc-bootstrap.json"
        - name: GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT
          value: "true"
        ports:
        - protocol: TCP
          containerPort: 50051
        resources:
          limits:
            cpu: 800m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 512Mi
        volumeMounts:
        - name: grpc-td-conf
          mountPath: /tmp/grpc-xds/
      initContainers:
      - name: grpc-td-init
        image: gcr.io/trafficdirector-prod/td-grpc-bootstrap:0.12.0-rc1
        imagePullPolicy: Always
        args:
        - --output
        - "/tmp/bootstrap/td-grpc-bootstrap.json"
        - --include-psm-security-experimental
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 10m
            memory: 100Mi
        volumeMounts:
        - name: grpc-td-conf
          mountPath: /tmp/bootstrap/
      serviceAccountName: example-grpc-server
      volumes:
      - name: grpc-td-conf
        emptyDir:
          medium: Memory
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: example-grpc-client
  namespace: example-grpc-client
  labels:
    k8s-app: example-grpc-client
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: example-grpc-client
  strategy: {}
  template:
    metadata:
      annotations:
        security.cloud.google.com/use-workload-certificates: ""
      labels:
        k8s-app: example-grpc-client
    spec:
      containers:
      - image: gcr.io/meshca-gke-test/psms-grpc-xds:2.06
        imagePullPolicy: Always
        name: example-grpc-client
        command:
        - /bin/sleep
        - inf
        env:
        - name: GRPC_XDS_BOOTSTRAP
          value: "/tmp/grpc-xds/td-grpc-bootstrap.json"
        - name: GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT
          value: "true"
        resources:
          limits:
            cpu: 800m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 512Mi
        volumeMounts:
        - name: grpc-td-conf
          mountPath: /tmp/grpc-xds/
      initContainers:
      - name: grpc-td-init
        image: gcr.io/trafficdirector-prod/td-grpc-bootstrap:0.12.0-rc1
        imagePullPolicy: Always
        args:
        - --output
        - "/tmp/bootstrap/td-grpc-bootstrap.json"
        - --include-psm-security-experimental
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 10m
            memory: 100Mi
        volumeMounts:
        - name: grpc-td-conf
          mountPath: /tmp/bootstrap/
      serviceAccountName: example-grpc-client
      volumes:
      - name: grpc-td-conf
        emptyDir:
          medium: Memory
